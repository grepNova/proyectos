package com.generado;

// Generated 11-dic-2012 20:33:51 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Despacho generated by hbm2java
 */
@Entity
@Table(name = "despacho", uniqueConstraints = {
		@UniqueConstraint(columnNames = "ultimoregdesp"),
		@UniqueConstraint(columnNames = "aceptacion"),
		@UniqueConstraint(columnNames = "error"),
		@UniqueConstraint(columnNames = "carrera"),
		@UniqueConstraint(columnNames = "ultimoreg"),
		@UniqueConstraint(columnNames = "libre"),
		@UniqueConstraint(columnNames = "aborto"),
		@UniqueConstraint(columnNames = "masinfo"),
		@UniqueConstraint(columnNames = "asignacion") })
public class Despacho implements java.io.Serializable {

	private int iddespacho;
	private Monitoreo monitoreoByAceptacion;
	private Monitoreo monitoreoByLibre;
	private Monitoreo monitoreoByMasinfo;
	private Interseccion interseccion;
	private FosUser fosUserByUsuario;
	private Monitoreo monitoreoByUltimoregdesp;
	private Monitoreo monitoreoByCarrera;
	private Unidad unidad;
	private Monitoreo monitoreoByError;
	private Monitoreo monitoreoByUltimoreg;
	private FosUser fosUserByUserCancel;
	private FosUser fosUserByCliente;
	private Monitoreo monitoreoByAsignacion;
	private Monitoreo monitoreoByAborto;
	private Date fechahora;
	private String cedula;
	private String nombre;
	private String apellido;
	private Double latitud;
	private Double longitud;
	private String principal;
	private String secundaria;
	private String adicional;
	private String masinf;
	private String mensaje;
	private Double tiempollegada;
	private Boolean cancelado;
	private Boolean finalizado;
	private String motivoCancel;
	private Date fechahoraCancel;
	private Double duracion;
	private String estado;
	private Set<Recorrido> recorridos = new HashSet<Recorrido>(0);

	public Despacho() {
	}

	public Despacho(int iddespacho) {
		this.iddespacho = iddespacho;
	}

	public Despacho(int iddespacho, Monitoreo monitoreoByAceptacion,
			Monitoreo monitoreoByLibre, Monitoreo monitoreoByMasinfo,
			Interseccion interseccion, FosUser fosUserByUsuario,
			Monitoreo monitoreoByUltimoregdesp, Monitoreo monitoreoByCarrera,
			Unidad unidad, Monitoreo monitoreoByError,
			Monitoreo monitoreoByUltimoreg, FosUser fosUserByUserCancel,
			FosUser fosUserByCliente, Monitoreo monitoreoByAsignacion,
			Monitoreo monitoreoByAborto, Date fechahora, String cedula,
			String nombre, String apellido, Double latitud, Double longitud,
			String principal, String secundaria, String adicional,
			String masinf, String mensaje, Double tiempollegada,
			Boolean cancelado, Boolean finalizado, String motivoCancel,
			Date fechahoraCancel, Double duracion, String estado,
			Set<Recorrido> recorridos) {
		this.iddespacho = iddespacho;
		this.monitoreoByAceptacion = monitoreoByAceptacion;
		this.monitoreoByLibre = monitoreoByLibre;
		this.monitoreoByMasinfo = monitoreoByMasinfo;
		this.interseccion = interseccion;
		this.fosUserByUsuario = fosUserByUsuario;
		this.monitoreoByUltimoregdesp = monitoreoByUltimoregdesp;
		this.monitoreoByCarrera = monitoreoByCarrera;
		this.unidad = unidad;
		this.monitoreoByError = monitoreoByError;
		this.monitoreoByUltimoreg = monitoreoByUltimoreg;
		this.fosUserByUserCancel = fosUserByUserCancel;
		this.fosUserByCliente = fosUserByCliente;
		this.monitoreoByAsignacion = monitoreoByAsignacion;
		this.monitoreoByAborto = monitoreoByAborto;
		this.fechahora = fechahora;
		this.cedula = cedula;
		this.nombre = nombre;
		this.apellido = apellido;
		this.latitud = latitud;
		this.longitud = longitud;
		this.principal = principal;
		this.secundaria = secundaria;
		this.adicional = adicional;
		this.masinf = masinf;
		this.mensaje = mensaje;
		this.tiempollegada = tiempollegada;
		this.cancelado = cancelado;
		this.finalizado = finalizado;
		this.motivoCancel = motivoCancel;
		this.fechahoraCancel = fechahoraCancel;
		this.duracion = duracion;
		this.estado = estado;
		this.recorridos = recorridos;
	}

	@Id
	@Column(name = "iddespacho", unique = true, nullable = false)
	public int getIddespacho() {
		return this.iddespacho;
	}

	public void setIddespacho(int iddespacho) {
		this.iddespacho = iddespacho;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "aceptacion", unique = true)
	public Monitoreo getMonitoreoByAceptacion() {
		return this.monitoreoByAceptacion;
	}

	public void setMonitoreoByAceptacion(Monitoreo monitoreoByAceptacion) {
		this.monitoreoByAceptacion = monitoreoByAceptacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "libre", unique = true)
	public Monitoreo getMonitoreoByLibre() {
		return this.monitoreoByLibre;
	}

	public void setMonitoreoByLibre(Monitoreo monitoreoByLibre) {
		this.monitoreoByLibre = monitoreoByLibre;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "masinfo", unique = true)
	public Monitoreo getMonitoreoByMasinfo() {
		return this.monitoreoByMasinfo;
	}

	public void setMonitoreoByMasinfo(Monitoreo monitoreoByMasinfo) {
		this.monitoreoByMasinfo = monitoreoByMasinfo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "interseccion")
	public Interseccion getInterseccion() {
		return this.interseccion;
	}

	public void setInterseccion(Interseccion interseccion) {
		this.interseccion = interseccion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usuario")
	public FosUser getFosUserByUsuario() {
		return this.fosUserByUsuario;
	}

	public void setFosUserByUsuario(FosUser fosUserByUsuario) {
		this.fosUserByUsuario = fosUserByUsuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ultimoregdesp", unique = true)
	public Monitoreo getMonitoreoByUltimoregdesp() {
		return this.monitoreoByUltimoregdesp;
	}

	public void setMonitoreoByUltimoregdesp(Monitoreo monitoreoByUltimoregdesp) {
		this.monitoreoByUltimoregdesp = monitoreoByUltimoregdesp;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "carrera", unique = true)
	public Monitoreo getMonitoreoByCarrera() {
		return this.monitoreoByCarrera;
	}

	public void setMonitoreoByCarrera(Monitoreo monitoreoByCarrera) {
		this.monitoreoByCarrera = monitoreoByCarrera;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "unidad")
	public Unidad getUnidad() {
		return this.unidad;
	}

	public void setUnidad(Unidad unidad) {
		this.unidad = unidad;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "error", unique = true)
	public Monitoreo getMonitoreoByError() {
		return this.monitoreoByError;
	}

	public void setMonitoreoByError(Monitoreo monitoreoByError) {
		this.monitoreoByError = monitoreoByError;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ultimoreg", unique = true)
	public Monitoreo getMonitoreoByUltimoreg() {
		return this.monitoreoByUltimoreg;
	}

	public void setMonitoreoByUltimoreg(Monitoreo monitoreoByUltimoreg) {
		this.monitoreoByUltimoreg = monitoreoByUltimoreg;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_cancel")
	public FosUser getFosUserByUserCancel() {
		return this.fosUserByUserCancel;
	}

	public void setFosUserByUserCancel(FosUser fosUserByUserCancel) {
		this.fosUserByUserCancel = fosUserByUserCancel;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cliente")
	public FosUser getFosUserByCliente() {
		return this.fosUserByCliente;
	}

	public void setFosUserByCliente(FosUser fosUserByCliente) {
		this.fosUserByCliente = fosUserByCliente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "asignacion", unique = true)
	public Monitoreo getMonitoreoByAsignacion() {
		return this.monitoreoByAsignacion;
	}

	public void setMonitoreoByAsignacion(Monitoreo monitoreoByAsignacion) {
		this.monitoreoByAsignacion = monitoreoByAsignacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "aborto", unique = true)
	public Monitoreo getMonitoreoByAborto() {
		return this.monitoreoByAborto;
	}

	public void setMonitoreoByAborto(Monitoreo monitoreoByAborto) {
		this.monitoreoByAborto = monitoreoByAborto;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fechahora", length = 22)
	public Date getFechahora() {
		return this.fechahora;
	}

	public void setFechahora(Date fechahora) {
		this.fechahora = fechahora;
	}

	@Column(name = "cedula")
	public String getCedula() {
		return this.cedula;
	}

	public void setCedula(String cedula) {
		this.cedula = cedula;
	}

	@Column(name = "nombre")
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "apellido")
	public String getApellido() {
		return this.apellido;
	}

	public void setApellido(String apellido) {
		this.apellido = apellido;
	}

	@Column(name = "latitud", precision = 17, scale = 17)
	public Double getLatitud() {
		return this.latitud;
	}

	public void setLatitud(Double latitud) {
		this.latitud = latitud;
	}

	@Column(name = "longitud", precision = 17, scale = 17)
	public Double getLongitud() {
		return this.longitud;
	}

	public void setLongitud(Double longitud) {
		this.longitud = longitud;
	}

	@Column(name = "principal")
	public String getPrincipal() {
		return this.principal;
	}

	public void setPrincipal(String principal) {
		this.principal = principal;
	}

	@Column(name = "secundaria")
	public String getSecundaria() {
		return this.secundaria;
	}

	public void setSecundaria(String secundaria) {
		this.secundaria = secundaria;
	}

	@Column(name = "adicional")
	public String getAdicional() {
		return this.adicional;
	}

	public void setAdicional(String adicional) {
		this.adicional = adicional;
	}

	@Column(name = "masinf")
	public String getMasinf() {
		return this.masinf;
	}

	public void setMasinf(String masinf) {
		this.masinf = masinf;
	}

	@Column(name = "mensaje")
	public String getMensaje() {
		return this.mensaje;
	}

	public void setMensaje(String mensaje) {
		this.mensaje = mensaje;
	}

	@Column(name = "tiempollegada", precision = 17, scale = 17)
	public Double getTiempollegada() {
		return this.tiempollegada;
	}

	public void setTiempollegada(Double tiempollegada) {
		this.tiempollegada = tiempollegada;
	}

	@Column(name = "cancelado")
	public Boolean getCancelado() {
		return this.cancelado;
	}

	public void setCancelado(Boolean cancelado) {
		this.cancelado = cancelado;
	}

	@Column(name = "finalizado")
	public Boolean getFinalizado() {
		return this.finalizado;
	}

	public void setFinalizado(Boolean finalizado) {
		this.finalizado = finalizado;
	}

	@Column(name = "motivo_cancel")
	public String getMotivoCancel() {
		return this.motivoCancel;
	}

	public void setMotivoCancel(String motivoCancel) {
		this.motivoCancel = motivoCancel;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fechahora_cancel", length = 22)
	public Date getFechahoraCancel() {
		return this.fechahoraCancel;
	}

	public void setFechahoraCancel(Date fechahoraCancel) {
		this.fechahoraCancel = fechahoraCancel;
	}

	@Column(name = "duracion", precision = 17, scale = 17)
	public Double getDuracion() {
		return this.duracion;
	}

	public void setDuracion(Double duracion) {
		this.duracion = duracion;
	}

	@Column(name = "estado")
	public String getEstado() {
		return this.estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "despacho")
	public Set<Recorrido> getRecorridos() {
		return this.recorridos;
	}

	public void setRecorridos(Set<Recorrido> recorridos) {
		this.recorridos = recorridos;
	}

}
