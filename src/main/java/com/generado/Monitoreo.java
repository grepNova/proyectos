package com.generado;

// Generated 11-dic-2012 20:33:51 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Monitoreo generated by hbm2java
 */
@Entity
@Table(name = "monitoreo")
public class Monitoreo implements java.io.Serializable {

	private int idmonitoreo;
	private Mecanica mecanica;
	private Unidad unidad;
	private Estadoservicio estadoservicio;
	private Estadoequipo estadoequipo;
	private Tipotrama tipotrama;
	private Estadocarrera estadocarrera;
	private int idcooperativa;
	private Integer codigounidad;
	private Date fechahora;
	private Integer horatrama;
	private String latitud;
	private String longitud;
	private String direccionip;
	private Double velocidad;
	private Integer idptocontrol;
	private String estadoPuertas;
	private Double distInstalacion;
	private Double distRuta;
	private Integer pasajEntran;
	private Integer pasajSalen;
	private Integer pasajBordo;
	private String trama;
	private Date fecharegistro;
	private String rumbo;
	private String variacion;
	private Integer satelites;
	private Double odometro;
	private Set<Despacho> despachosForUltimoregdesp = new HashSet<Despacho>(0);
	private Set<Despacho> despachosForError = new HashSet<Despacho>(0);
	private Set<Despacho> despachosForAsignacion = new HashSet<Despacho>(0);
	private Set<Despacho> despachosForAborto = new HashSet<Despacho>(0);
	private Set<Despacho> despachosForLibre = new HashSet<Despacho>(0);
	private Set<Interseccion> interseccions = new HashSet<Interseccion>(0);
	private Set<Despacho> despachosForMasinfo = new HashSet<Despacho>(0);
	private Set<Recorrido> recorridos = new HashSet<Recorrido>(0);
	private Set<Despacho> despachosForUltimoreg = new HashSet<Despacho>(0);
	private Set<Despacho> despachosForCarrera = new HashSet<Despacho>(0);
	private Set<Ultimoregistro> ultimoregistros = new HashSet<Ultimoregistro>(0);
	private Set<Despacho> despachosForAceptacion = new HashSet<Despacho>(0);

	public Monitoreo() {
	}

	public Monitoreo(int idmonitoreo, int idcooperativa) {
		this.idmonitoreo = idmonitoreo;
		this.idcooperativa = idcooperativa;
	}

	public Monitoreo(int idmonitoreo, Mecanica mecanica, Unidad unidad,
			Estadoservicio estadoservicio, Estadoequipo estadoequipo,
			Tipotrama tipotrama, Estadocarrera estadocarrera,
			int idcooperativa, Integer codigounidad, Date fechahora,
			Integer horatrama, String latitud, String longitud,
			String direccionip, Double velocidad, Integer idptocontrol,
			String estadoPuertas, Double distInstalacion, Double distRuta,
			Integer pasajEntran, Integer pasajSalen, Integer pasajBordo,
			String trama, Date fecharegistro, String rumbo, String variacion,
			Integer satelites, Double odometro,
			Set<Despacho> despachosForUltimoregdesp,
			Set<Despacho> despachosForError,
			Set<Despacho> despachosForAsignacion,
			Set<Despacho> despachosForAborto, Set<Despacho> despachosForLibre,
			Set<Interseccion> interseccions, Set<Despacho> despachosForMasinfo,
			Set<Recorrido> recorridos, Set<Despacho> despachosForUltimoreg,
			Set<Despacho> despachosForCarrera,
			Set<Ultimoregistro> ultimoregistros,
			Set<Despacho> despachosForAceptacion) {
		this.idmonitoreo = idmonitoreo;
		this.mecanica = mecanica;
		this.unidad = unidad;
		this.estadoservicio = estadoservicio;
		this.estadoequipo = estadoequipo;
		this.tipotrama = tipotrama;
		this.estadocarrera = estadocarrera;
		this.idcooperativa = idcooperativa;
		this.codigounidad = codigounidad;
		this.fechahora = fechahora;
		this.horatrama = horatrama;
		this.latitud = latitud;
		this.longitud = longitud;
		this.direccionip = direccionip;
		this.velocidad = velocidad;
		this.idptocontrol = idptocontrol;
		this.estadoPuertas = estadoPuertas;
		this.distInstalacion = distInstalacion;
		this.distRuta = distRuta;
		this.pasajEntran = pasajEntran;
		this.pasajSalen = pasajSalen;
		this.pasajBordo = pasajBordo;
		this.trama = trama;
		this.fecharegistro = fecharegistro;
		this.rumbo = rumbo;
		this.variacion = variacion;
		this.satelites = satelites;
		this.odometro = odometro;
		this.despachosForUltimoregdesp = despachosForUltimoregdesp;
		this.despachosForError = despachosForError;
		this.despachosForAsignacion = despachosForAsignacion;
		this.despachosForAborto = despachosForAborto;
		this.despachosForLibre = despachosForLibre;
		this.interseccions = interseccions;
		this.despachosForMasinfo = despachosForMasinfo;
		this.recorridos = recorridos;
		this.despachosForUltimoreg = despachosForUltimoreg;
		this.despachosForCarrera = despachosForCarrera;
		this.ultimoregistros = ultimoregistros;
		this.despachosForAceptacion = despachosForAceptacion;
	}

	@Id
	@Column(name = "idmonitoreo", unique = true, nullable = false)
	public int getIdmonitoreo() {
		return this.idmonitoreo;
	}

	public void setIdmonitoreo(int idmonitoreo) {
		this.idmonitoreo = idmonitoreo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codmecanica")
	public Mecanica getMecanica() {
		return this.mecanica;
	}

	public void setMecanica(Mecanica mecanica) {
		this.mecanica = mecanica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idunidad")
	public Unidad getUnidad() {
		return this.unidad;
	}

	public void setUnidad(Unidad unidad) {
		this.unidad = unidad;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codservicio")
	public Estadoservicio getEstadoservicio() {
		return this.estadoservicio;
	}

	public void setEstadoservicio(Estadoservicio estadoservicio) {
		this.estadoservicio = estadoservicio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codequipo")
	public Estadoequipo getEstadoequipo() {
		return this.estadoequipo;
	}

	public void setEstadoequipo(Estadoequipo estadoequipo) {
		this.estadoequipo = estadoequipo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codtiptrama")
	public Tipotrama getTipotrama() {
		return this.tipotrama;
	}

	public void setTipotrama(Tipotrama tipotrama) {
		this.tipotrama = tipotrama;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codcarrera")
	public Estadocarrera getEstadocarrera() {
		return this.estadocarrera;
	}

	public void setEstadocarrera(Estadocarrera estadocarrera) {
		this.estadocarrera = estadocarrera;
	}

	@Column(name = "idcooperativa", nullable = false)
	public int getIdcooperativa() {
		return this.idcooperativa;
	}

	public void setIdcooperativa(int idcooperativa) {
		this.idcooperativa = idcooperativa;
	}

	@Column(name = "codigounidad")
	public Integer getCodigounidad() {
		return this.codigounidad;
	}

	public void setCodigounidad(Integer codigounidad) {
		this.codigounidad = codigounidad;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fechahora", length = 22)
	public Date getFechahora() {
		return this.fechahora;
	}

	public void setFechahora(Date fechahora) {
		this.fechahora = fechahora;
	}

	@Column(name = "horatrama")
	public Integer getHoratrama() {
		return this.horatrama;
	}

	public void setHoratrama(Integer horatrama) {
		this.horatrama = horatrama;
	}

	@Column(name = "latitud", length = 20)
	public String getLatitud() {
		return this.latitud;
	}

	public void setLatitud(String latitud) {
		this.latitud = latitud;
	}

	@Column(name = "longitud", length = 20)
	public String getLongitud() {
		return this.longitud;
	}

	public void setLongitud(String longitud) {
		this.longitud = longitud;
	}

	@Column(name = "direccionip", length = 20)
	public String getDireccionip() {
		return this.direccionip;
	}

	public void setDireccionip(String direccionip) {
		this.direccionip = direccionip;
	}

	@Column(name = "velocidad", precision = 17, scale = 17)
	public Double getVelocidad() {
		return this.velocidad;
	}

	public void setVelocidad(Double velocidad) {
		this.velocidad = velocidad;
	}

	@Column(name = "idptocontrol")
	public Integer getIdptocontrol() {
		return this.idptocontrol;
	}

	public void setIdptocontrol(Integer idptocontrol) {
		this.idptocontrol = idptocontrol;
	}

	@Column(name = "estado_puertas", length = 5)
	public String getEstadoPuertas() {
		return this.estadoPuertas;
	}

	public void setEstadoPuertas(String estadoPuertas) {
		this.estadoPuertas = estadoPuertas;
	}

	@Column(name = "dist_instalacion", precision = 17, scale = 17)
	public Double getDistInstalacion() {
		return this.distInstalacion;
	}

	public void setDistInstalacion(Double distInstalacion) {
		this.distInstalacion = distInstalacion;
	}

	@Column(name = "dist_ruta", precision = 17, scale = 17)
	public Double getDistRuta() {
		return this.distRuta;
	}

	public void setDistRuta(Double distRuta) {
		this.distRuta = distRuta;
	}

	@Column(name = "pasaj_entran")
	public Integer getPasajEntran() {
		return this.pasajEntran;
	}

	public void setPasajEntran(Integer pasajEntran) {
		this.pasajEntran = pasajEntran;
	}

	@Column(name = "pasaj_salen")
	public Integer getPasajSalen() {
		return this.pasajSalen;
	}

	public void setPasajSalen(Integer pasajSalen) {
		this.pasajSalen = pasajSalen;
	}

	@Column(name = "pasaj_bordo")
	public Integer getPasajBordo() {
		return this.pasajBordo;
	}

	public void setPasajBordo(Integer pasajBordo) {
		this.pasajBordo = pasajBordo;
	}

	@Column(name = "trama")
	public String getTrama() {
		return this.trama;
	}

	public void setTrama(String trama) {
		this.trama = trama;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecharegistro", length = 22)
	public Date getFecharegistro() {
		return this.fecharegistro;
	}

	public void setFecharegistro(Date fecharegistro) {
		this.fecharegistro = fecharegistro;
	}

	@Column(name = "rumbo")
	public String getRumbo() {
		return this.rumbo;
	}

	public void setRumbo(String rumbo) {
		this.rumbo = rumbo;
	}

	@Column(name = "variacion")
	public String getVariacion() {
		return this.variacion;
	}

	public void setVariacion(String variacion) {
		this.variacion = variacion;
	}

	@Column(name = "satelites")
	public Integer getSatelites() {
		return this.satelites;
	}

	public void setSatelites(Integer satelites) {
		this.satelites = satelites;
	}

	@Column(name = "odometro", precision = 17, scale = 17)
	public Double getOdometro() {
		return this.odometro;
	}

	public void setOdometro(Double odometro) {
		this.odometro = odometro;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "monitoreoByUltimoregdesp")
	public Set<Despacho> getDespachosForUltimoregdesp() {
		return this.despachosForUltimoregdesp;
	}

	public void setDespachosForUltimoregdesp(
			Set<Despacho> despachosForUltimoregdesp) {
		this.despachosForUltimoregdesp = despachosForUltimoregdesp;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "monitoreoByError")
	public Set<Despacho> getDespachosForError() {
		return this.despachosForError;
	}

	public void setDespachosForError(Set<Despacho> despachosForError) {
		this.despachosForError = despachosForError;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "monitoreoByAsignacion")
	public Set<Despacho> getDespachosForAsignacion() {
		return this.despachosForAsignacion;
	}

	public void setDespachosForAsignacion(Set<Despacho> despachosForAsignacion) {
		this.despachosForAsignacion = despachosForAsignacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "monitoreoByAborto")
	public Set<Despacho> getDespachosForAborto() {
		return this.despachosForAborto;
	}

	public void setDespachosForAborto(Set<Despacho> despachosForAborto) {
		this.despachosForAborto = despachosForAborto;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "monitoreoByLibre")
	public Set<Despacho> getDespachosForLibre() {
		return this.despachosForLibre;
	}

	public void setDespachosForLibre(Set<Despacho> despachosForLibre) {
		this.despachosForLibre = despachosForLibre;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "callemonitoreo", joinColumns = { @JoinColumn(name = "monitoreo_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "interseccion_id", nullable = false, updatable = false) })
	public Set<Interseccion> getInterseccions() {
		return this.interseccions;
	}

	public void setInterseccions(Set<Interseccion> interseccions) {
		this.interseccions = interseccions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "monitoreoByMasinfo")
	public Set<Despacho> getDespachosForMasinfo() {
		return this.despachosForMasinfo;
	}

	public void setDespachosForMasinfo(Set<Despacho> despachosForMasinfo) {
		this.despachosForMasinfo = despachosForMasinfo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "monitoreo")
	public Set<Recorrido> getRecorridos() {
		return this.recorridos;
	}

	public void setRecorridos(Set<Recorrido> recorridos) {
		this.recorridos = recorridos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "monitoreoByUltimoreg")
	public Set<Despacho> getDespachosForUltimoreg() {
		return this.despachosForUltimoreg;
	}

	public void setDespachosForUltimoreg(Set<Despacho> despachosForUltimoreg) {
		this.despachosForUltimoreg = despachosForUltimoreg;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "monitoreoByCarrera")
	public Set<Despacho> getDespachosForCarrera() {
		return this.despachosForCarrera;
	}

	public void setDespachosForCarrera(Set<Despacho> despachosForCarrera) {
		this.despachosForCarrera = despachosForCarrera;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "monitoreo")
	public Set<Ultimoregistro> getUltimoregistros() {
		return this.ultimoregistros;
	}

	public void setUltimoregistros(Set<Ultimoregistro> ultimoregistros) {
		this.ultimoregistros = ultimoregistros;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "monitoreoByAceptacion")
	public Set<Despacho> getDespachosForAceptacion() {
		return this.despachosForAceptacion;
	}

	public void setDespachosForAceptacion(Set<Despacho> despachosForAceptacion) {
		this.despachosForAceptacion = despachosForAceptacion;
	}

}
